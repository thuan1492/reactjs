{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JAMES\\\\OneDrive\\\\Desktop\\\\Architech\\\\Front end\\\\Test\\\\lab-test-1\\\\src\\\\TableData\\\\DataLoader.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductLoaderData(_ref) {\n  let {\n    product\n  } = _ref;\n  // const [productName, setProductName] = useState(product.productName);\n  // const [productType, setProductType] = useState(product.productType);\n  // const [productDescription, setProductDescription] = useState(product.productDescription);\n  // const [productPrice, setProductPrice] = useState(product.price);\n  // const [productQuantity, setProductQuantity] = useState(product.quantity);\n  const endPoint = \"http://localhost:808/products\";\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: product.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: product.productName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: product.productType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: product.productPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: productQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: productDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (window.confirm('Are you sure you wish to UPDATE this product?')) {\n            fetch(endPoint, {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                id: product.id,\n                productName: productName,\n                productType: productType,\n                price: productPrice,\n                quantity: productQuantity,\n                productDescription: productDescription\n              })\n            });\n          }\n        },\n        children: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: () => {\n          if (window.confirm('Are you sure you wish to DELETE this product?')) {\n            fetch(endPoint + \"/\" + product.id, {\n              method: 'DELETE',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n          }\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, product.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = ProductLoaderData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductLoaderData\");","map":{"version":3,"sources":["C:/Users/JAMES/OneDrive/Desktop/Architech/Front end/Test/lab-test-1/src/TableData/DataLoader.js"],"names":["React","useState","ProductLoaderData","product","endPoint","id","productName","productType","productPrice","productQuantity","productDescription","window","confirm","fetch","method","headers","body","JSON","stringify","price","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;AAEA,eAAe,SAASC,iBAAT,OAAqC;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AAGhD;AACA;AACA;AACA;AACA;AAEA,QAAMC,QAAQ,GAAG,+BAAjB;AAEA,sBAEI;AAAA,4BAEI;AAAA,gBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGA;AAAA,gBAAKF,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAA,gBAAKH,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAA,gBAAKJ,OAAO,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,YALA,eAMA;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YANA,eAOA;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAPA,eAWA;AAAA,6BAAI;AAAQ,QAAA,OAAO,EAAE,MAAM;AACzB,cAAIC,MAAM,CAACC,OAAP,CAAe,+CAAf,CAAJ,EACA;AACEC,YAAAA,KAAK,CAACT,QAAD,EAAW;AACZU,cAAAA,MAAM,EAAE,KADI;AAEZC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFG;AAKZC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEb,gBAAAA,EAAE,EAAGF,OAAO,CAACE,EAAf;AAAmBC,gBAAAA,WAAW,EAAEA,WAAhC;AACjBC,gBAAAA,WAAW,EAAEA,WADI;AACQY,gBAAAA,KAAK,EAAEX,YADf;AAC6BY,gBAAAA,QAAQ,EAAEX,eADvC;AAEhBC,gBAAAA,kBAAkB,EAAGA;AAFL,eAAf;AALM,aAAX,CAAL;AASD;AACA,SAbC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAXA,eA0BA;AAAA,6BAAI;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,OAAO,EAAE,MAAM;AACnD,cAAIC,MAAM,CAACC,OAAP,CAAe,+CAAf,CAAJ,EACA;AACEC,YAAAA,KAAK,CAACT,QAAQ,GAAG,GAAX,GAAiBD,OAAO,CAACE,EAA1B,EAA8B;AACjCS,cAAAA,MAAM,EAAE,QADyB;AAEjCC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AAFwB,aAA9B,CAAL;AAMD;AACA,SAVC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YA1BA;AAAA,KAASZ,OAAO,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,UAFJ;AA0CH;KArDuBH,iB","sourcesContent":["import React, { useState} from \"react\";\r\n\r\nexport default function ProductLoaderData({product}){\r\n    \r\n\r\n    // const [productName, setProductName] = useState(product.productName);\r\n    // const [productType, setProductType] = useState(product.productType);\r\n    // const [productDescription, setProductDescription] = useState(product.productDescription);\r\n    // const [productPrice, setProductPrice] = useState(product.price);\r\n    // const [productQuantity, setProductQuantity] = useState(product.quantity);\r\n\r\n    const endPoint = \"http://localhost:808/products\"\r\n\r\n    return(\r\n        \r\n        <tr key={product.id}>\r\n        \r\n            <td>{product.id}</td>\r\n        <td>{product.productName}</td>\r\n        <td>{product.productType}</td>\r\n        <td>{product.productPrice}</td>\r\n        <td>{productQuantity}</td>\r\n        <td>{productDescription}</td>\r\n        \r\n        \r\n        \r\n        <td><button onClick={() => { \r\n          if (window.confirm('Are you sure you wish to UPDATE this product?'))\r\n          {\r\n            fetch(endPoint, {\r\n                method: 'PUT',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ id : product.id, productName: productName, \r\n                    productType: productType,price: productPrice, quantity: productQuantity,\r\n                     productDescription : productDescription})\r\n            })\r\n          }\r\n          } }>update</button></td>\r\n\r\n        <td><button className='delete-button' onClick={() => { \r\n          if (window.confirm('Are you sure you wish to DELETE this product?'))\r\n          {\r\n            fetch(endPoint + \"/\" + product.id, {\r\n              method: 'DELETE',\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              }\r\n          })\r\n          }\r\n          } }>X</button></td>\r\n      </tr>  \r\n    \r\n    );\r\n} "]},"metadata":{},"sourceType":"module"}