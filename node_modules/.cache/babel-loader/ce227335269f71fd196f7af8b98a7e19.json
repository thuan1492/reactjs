{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JAMES\\\\OneDrive\\\\Desktop\\\\Architech\\\\Front end\\\\Test\\\\lab-test-1\\\\src\\\\TableData\\\\ModalProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalProduct(_ref) {\n  _s();\n\n  let {\n    product,\n    ishow = false,\n    Close,\n    Show\n  } = _ref;\n  const [show, setShow] = useState(ishow);\n  const [productName, setProductName] = useState(product.productName);\n  const [productType, setProductType] = useState(product.productType);\n  const [productDescription, setProductDescription] = useState(product.productDescription);\n  const [productPrice, setProductPrice] = useState(product.price);\n  const [productQuantity, setProductQuantity] = useState(product.quantity);\n  const endPoint = \"http://localhost:808/products\";\n\n  const handleClose = () => {\n    Close();\n    setShow(false);\n  };\n\n  const handleShow = () => {\n    Show();\n    setShow(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Product Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"productName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter product name\",\n            onChange: e => setProductName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"productPrice\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Product Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Enter product price\",\n            onChange: e => setProductPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"productQuantity\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Product Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"number\",\n            placeholder: \"Enter product quantity\",\n            onChange: e => setProductQuantity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"productDescription\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Product Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter product description\",\n            onChange: e => setProductDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"productType\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Product Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), ['radio'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              defaultChecked: \"true\",\n              onChange: e => setProductType(\"smart watch\"),\n              inline: true,\n              label: \"smart watch\",\n              name: \"group1\",\n              type: type,\n              id: `inline-${type}-1`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              onChange: e => setProductType(\"phone\"),\n              inline: true,\n              label: \"phone\",\n              name: \"group1\",\n              type: type,\n              id: `inline-${type}-2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              onChange: e => setProductType(\"cleaner\"),\n              label: \"cleaner\",\n              name: \"group1\",\n              type: type,\n              id: `inline-${type}-3`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, `inline-${type}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalProduct, \"EU5E3VKDKxtF/bx/CvZFm2vXgE0=\");\n\n_c = ModalProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalProduct\");","map":{"version":3,"sources":["C:/Users/JAMES/OneDrive/Desktop/Architech/Front end/Test/lab-test-1/src/TableData/ModalProduct.js"],"names":["React","useState","Modal","Button","Form","$","ModalProduct","product","ishow","Close","Show","show","setShow","productName","setProductName","productType","setProductType","productDescription","setProductDescription","productPrice","setProductPrice","price","productQuantity","setProductQuantity","quantity","endPoint","handleClose","handleShow","validated","handleSubmit","e","target","value","map","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAGA,eAAe,SAASC,YAAT,OAAyD;AAAA;;AAAA,MAAnC;AAACC,IAAAA,OAAD;AAASC,IAAAA,KAAK,GAAC,KAAf;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,GAAmC;AAGpE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACO,KAAD,CAAhC;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACM,OAAO,CAACM,WAAT,CAA9C;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAACM,OAAO,CAACQ,WAAT,CAA9C;AACA,QAAM,CAACE,kBAAD,EAAqBC,qBAArB,IAA8CjB,QAAQ,CAACM,OAAO,CAACU,kBAAT,CAA5D;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAACM,OAAO,CAACc,KAAT,CAAhD;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAACM,OAAO,CAACiB,QAAT,CAAtD;AAEA,QAAMC,QAAQ,GAAG,+BAAjB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AAACjB,IAAAA,KAAK;AAAIG,IAAAA,OAAO,CAAC,KAAD,CAAP;AAAgB,GAApD;;AACA,QAAMe,UAAU,GAAG,MAAM;AAACjB,IAAAA,IAAI;AAAIE,IAAAA,OAAO,CAAC,IAAD,CAAP;AAAe,GAAjD;;AACA,sBAEI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,MAAM,EAAEe,WAA3B;AAAA,4BACA,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,SAAS,EAAEE,SAA5B;AAAuC,QAAA,QAAQ,EAAEC,YAAjD;AAAA,gCAEE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,aAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,QAAQ,MAAtB;AAAuB,YAAA,IAAI,EAAC,MAA5B;AAAmC,YAAA,WAAW,EAAC,oBAA/C;AAAoE,YAAA,QAAQ,EAAEC,CAAC,IAAIhB,cAAc,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAjG;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,cAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,QAAQ,MAAtB;AAAuB,YAAA,IAAI,EAAC,QAA5B;AAAqC,YAAA,WAAW,EAAC,qBAAjD;AAAwE,YAAA,QAAQ,EAAEF,CAAC,IAAIV,eAAe,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtG;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAYE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,iBAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,QAAQ,MAAtB;AAAuB,YAAA,IAAI,EAAC,QAA5B;AAAqC,YAAA,WAAW,EAAC,wBAAjD;AAA2E,YAAA,QAAQ,EAAEF,CAAC,IAAIP,kBAAkB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5G;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAiBE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,oBAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,QAAQ,MAAtB;AAAuB,YAAA,IAAI,EAAC,MAA5B;AAAmC,YAAA,WAAW,EAAC,2BAA/C;AAA4E,YAAA,QAAQ,EAAEF,CAAC,IAAIZ,qBAAqB,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAAhH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAsBE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,aAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,CAAC,OAAD,EAAUC,GAAV,CAAeC,IAAD,iBACb;AAA4B,YAAA,SAAS,EAAC,MAAtC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,cAAc,EAAC,MADjB;AAEE,cAAA,QAAQ,EAAEJ,CAAC,IAAId,cAAc,CAAC,aAAD,CAF/B;AAGE,cAAA,MAAM,MAHR;AAIE,cAAA,KAAK,EAAC,aAJR;AAKE,cAAA,IAAI,EAAC,QALP;AAME,cAAA,IAAI,EAAEkB,IANR;AAOE,cAAA,EAAE,EAAG,UAASA,IAAK;AAPrB;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,QAAQ,EAAEJ,CAAC,IAAId,cAAc,CAAC,OAAD,CAD/B;AAEE,cAAA,MAAM,MAFR;AAGE,cAAA,KAAK,EAAC,OAHR;AAIE,cAAA,IAAI,EAAC,QAJP;AAKE,cAAA,IAAI,EAAEkB,IALR;AAME,cAAA,EAAE,EAAG,UAASA,IAAK;AANrB;AAAA;AAAA;AAAA;AAAA,oBAVF,eAkBE,QAAC,IAAD,CAAM,KAAN;AACE,cAAA,MAAM,MADR;AAEE,cAAA,QAAQ,EAAEJ,CAAC,IAAId,cAAc,CAAC,SAAD,CAF/B;AAGE,cAAA,KAAK,EAAC,SAHR;AAIE,cAAA,IAAI,EAAC,QAJP;AAKE,cAAA,IAAI,EAAEkB,IALR;AAME,cAAA,EAAE,EAAG,UAASA,IAAK;AANrB;AAAA;AAAA;AAAA;AAAA,oBAlBF;AAAA,aAAW,UAASA,IAAK,EAAzB;AAAA;AAAA;AAAA;AAAA,kBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAuDE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAEL,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsEH;;GArFuBvB,Y;;KAAAA,Y","sourcesContent":["import React, { useState} from \"react\";\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from \"jquery\";\r\n\r\n\r\nexport default function ModalProduct({product,ishow=false, Close, Show}){\r\n    \r\n   \r\n    const [show, setShow] = useState(ishow);\r\n\r\n    const [productName, setProductName] = useState(product.productName);\r\n    const [productType, setProductType] = useState(product.productType);\r\n    const [productDescription, setProductDescription] = useState(product.productDescription);\r\n    const [productPrice, setProductPrice] = useState(product.price);\r\n    const [productQuantity, setProductQuantity] = useState(product.quantity);\r\n\r\n    const endPoint = \"http://localhost:808/products\"\r\n\r\n    const handleClose = () => {Close(); setShow(false);}\r\n    const handleShow = () => {Show(); setShow(true);}\r\n    return(\r\n        \r\n        <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Product Form</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"productName\">\r\n              <Form.Label>Product Name</Form.Label>\r\n              <Form.Control required type=\"text\" placeholder=\"Enter product name\" onChange={e => setProductName(e.target.value)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"productPrice\">\r\n              <Form.Label>Product Price</Form.Label>\r\n              <Form.Control required type=\"number\" placeholder=\"Enter product price\"  onChange={e => setProductPrice(e.target.value)} />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"productQuantity\">\r\n              <Form.Label>Product Quantity</Form.Label>\r\n              <Form.Control required type=\"number\" placeholder=\"Enter product quantity\"  onChange={e => setProductQuantity(e.target.value)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"productDescription\">\r\n              <Form.Label>Product Description</Form.Label>\r\n              <Form.Control required type=\"text\" placeholder=\"Enter product description\"  onChange={e => setProductDescription(e.target.value)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"productType\">\r\n              <Form.Label>Product Type</Form.Label>\r\n              {['radio'].map((type) => (\r\n                <div key={`inline-${type}`} className=\"mb-3\">\r\n                  <Form.Check\r\n                    defaultChecked=\"true\"\r\n                    onChange={e => setProductType(\"smart watch\")}\r\n                    inline\r\n                    label=\"smart watch\"\r\n                    name=\"group1\"\r\n                    type={type}\r\n                    id={`inline-${type}-1`}\r\n                  />\r\n                  <Form.Check\r\n                    onChange={e => setProductType(\"phone\")}\r\n                    inline\r\n                    label=\"phone\"\r\n                    name=\"group1\"\r\n                    type={type}\r\n                    id={`inline-${type}-2`}\r\n                  />\r\n                  <Form.Check\r\n                    inline\r\n                    onChange={e => setProductType(\"cleaner\")}\r\n                    label=\"cleaner\"\r\n                    name=\"group1\"\r\n                    type={type}\r\n                    id={`inline-${type}-3`}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n    );\r\n} "]},"metadata":{},"sourceType":"module"}